//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTPFileManagament
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.Linq;
    public partial class FTPFileInfo : INotifyPropertyChanged
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public FTPFileInfo()
        {
            this.FTPFileVersions = new HashSet<FTPFileVersion>();
        }

        public int Id { get; set; }
        public int ConnId { get; set; }
        public string FName { get; set; }
        public string FileFormat { get; set; }
        public string RemotePath { get; set; }

        public ObservableCollection<FTPFileVersion> FileVersions { get; set; } = new ObservableCollection<FTPFileVersion>();
        public virtual FTPConnectionInfo FTPConnectionInfo { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FTPFileVersion> FTPFileVersions { get; set; }
        public FTPFileVersion LastVersion => FileVersions.FirstOrDefault();
        public string ConnName => ConnectionsConfig.Instance.Connections.Where(x => x.Id == ConnId).FirstOrDefault()?.ConnIP;
        public int VersionsCount => FileVersions.Count;

        public event PropertyChangedEventHandler PropertyChanged;

        protected void UpdateProp()
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs("FileVersions"));
        }
    }
}
